<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20251.25.0520.1026                               -->
<workbook original-version='18.1' source-build='2025.1.2 (20251.25.0520.1026)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SingleValuePerNestSorting />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Metric' datatype='string' name='[Category Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
        <calculation class='tableau' formula='&quot;Sales&quot;' />
        <members>
          <member value='&quot;Sales&quot;' />
          <member value='&quot;Profit&quot;' />
          <member value='&quot;Orders&quot;' />
        </members>
      </column>
      <column caption='Region ' datatype='string' name='[Region Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
        <calculation class='tableau' formula='&quot;All&quot;' />
        <members>
          <member value='&quot;All&quot;' />
          <member value='&quot;Central&quot;' />
          <member value='&quot;East&quot;' />
          <member value='&quot;South&quot;' />
          <member value='&quot;West&quot;' />
        </members>
      </column>
      <column caption='View by' datatype='string' name='[State Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Region&quot;'>
        <calculation class='tableau' formula='&quot;Region&quot;' />
        <members>
          <member value='&quot;Region&quot;' />
          <member value='&quot;Category&quot;' />
          <member value='&quot;Sub-Category&quot;' />
        </members>
      </column>
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[State Parameter]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Region&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Category&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sub-Category&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Category Parameter]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Sales&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Orders&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Profit&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
    </datasource>
    <datasource caption='sample_-_superstore (1)' inline='true' name='federated.060wmiv1b64sij1d3qtcu019woe5' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='sample_-_superstore (1)' name='excel-direct.1jzkef50yy05qy174sein0uwujmr'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Shreyas/Downloads/sample_-_superstore (1).xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='excel-direct.1jzkef50yy05qy174sein0uwujmr' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='string' name='Country' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='integer' name='Postal Code' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='string' name='Product ID' ordinal='13' />
              <column datatype='string' name='Category' ordinal='14' />
              <column datatype='string' name='Sub-Category' ordinal='15' />
              <column datatype='string' name='Product Name' ordinal='16' />
              <column datatype='real' name='Sales' ordinal='17' />
              <column datatype='integer' name='Quantity' ordinal='18' />
              <column datatype='real' name='Discount' ordinal='19' />
              <column datatype='real' name='Profit' ordinal='20' />
            </columns>
          </relation>
          <relation connection='excel-direct.1jzkef50yy05qy174sein0uwujmr' name='People1' table='[People$]' type='table'>
            <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='6'>
              <column datatype='string' name='Person' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
            </columns>
          </relation>
          <relation connection='excel-direct.1jzkef50yy05qy174sein0uwujmr' name='Returns' table='[Returns$]' type='table'>
            <columns gridOrigin='A1:B297:no:A1:B297:0' header='yes' outcome='6'>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Category]' value='[Orders].[Category]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country]' value='[Orders].[Country]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID (Returns)]' value='[Returns].[Order ID]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Person (People1)]' value='[People1].[Person]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product ID]' value='[Orders].[Product ID]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[Region (People1)]' value='[People1].[Region]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Returned]' value='[Returns].[Returned]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Segment]' value='[Orders].[Segment]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[State]' value='[Orders].[State]' />
          <map key='[Sub-Category]' value='[Orders].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[People1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B5:no:A1:B5:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Returns]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B297:no:A1:B297:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Orders_9347997C540C4232901CFAF413D611ED]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_9347997C540C4232901CFAF413D611ED]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Orders_9347997C540C4232901CFAF413D611ED]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Orders_9347997C540C4232901CFAF413D611ED]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_9347997C540C4232901CFAF413D611ED]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_9347997C540C4232901CFAF413D611ED]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_9347997C540C4232901CFAF413D611ED]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_9347997C540C4232901CFAF413D611ED]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_9347997C540C4232901CFAF413D611ED]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_9347997C540C4232901CFAF413D611ED]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_9347997C540C4232901CFAF413D611ED]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Orders_9347997C540C4232901CFAF413D611ED]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_9347997C540C4232901CFAF413D611ED]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_9347997C540C4232901CFAF413D611ED]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_9347997C540C4232901CFAF413D611ED]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_9347997C540C4232901CFAF413D611ED]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_9347997C540C4232901CFAF413D611ED]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Orders_9347997C540C4232901CFAF413D611ED]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Orders_9347997C540C4232901CFAF413D611ED]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Orders_9347997C540C4232901CFAF413D611ED]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Orders_9347997C540C4232901CFAF413D611ED]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Person</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Person (People1)]</local-name>
            <parent-name>[People1]</parent-name>
            <remote-alias>Person</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[People_90401336EDF24F39B6768E0036DFAFA3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (People1)]</local-name>
            <parent-name>[People1]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[People_90401336EDF24F39B6768E0036DFAFA3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Returns_33329071CD8847619F56CAA108E5E03A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Returns_33329071CD8847619F56CAA108E5E03A]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.060wmiv1b64sij1d3qtcu019woe5].[sum:Sales:qk]&quot;' value='Sales%' />
        </aliases>
      </column>
      <column caption='Sales (%)' datatype='real' default-format='p0%' name='[Calculation_1047086962465337353]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Sales]) / TOTAL(SUM([Sales]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Profit (%)' datatype='real' default-format='p0%' name='[Calculation_1047086962465738762]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Profit]) / TOTAL(SUM([Profit]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Sales % of Region Row' datatype='real' default-format='p0%' name='[Calculation_1047086962476732437]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Sales]) / TOTAL(SUM([Sales]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Profit % of Region Row' datatype='real' default-format='p0%' name='[Calculation_1047086962476863510]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Profit]) / TOTAL(SUM([Profit]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Orders per Customer.' datatype='integer' name='[Calculation_1234549297558093824]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Customer ID] : COUNTD([Order ID]) }' />
      </column>
      <column caption='Orders by customers' datatype='integer' name='[Calculation_1234549297562669057]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Customer ID] : COUNTD([Order ID]) }' />
      </column>
      <column aggregation='Sum' caption='Orders per Customer' datatype='integer' name='[Calculation_1234549297565155330]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='{ FIXED [Customer ID] : COUNTD([Order ID]) }' />
      </column>
      <column caption='Current Year Profit' datatype='real' name='[Calculation_1234549297578364935]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF YEAR([Order Date]) = {MAX(YEAR([Order Date]))} THEN [Profit] END' />
      </column>
      <column caption='Previous Year Profit' datatype='real' name='[Calculation_1234549297578483720]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF YEAR([Order Date]) = {MAX(YEAR([Order Date])) - 1} THEN [Profit] END' />
      </column>
      <column caption='% Growth vs Previous Year' datatype='real' name='[Calculation_1234549297578676233]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Calculation_1234549297578364935]) - SUM([Calculation_1234549297578483720]))&#13;&#10; / SUM([Calculation_1234549297578483720])' />
      </column>
      <column caption='Profit Growth %' datatype='real' name='[Calculation_1234549297578778634]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Calculation_1234549297578364935]) - SUM([Calculation_1234549297578483720]))&#13;&#10;/ SUM([Calculation_1234549297578483720])' />
      </column>
      <column caption='Arrow Symbol' datatype='string' name='[Calculation_1234549297579102219]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1234549297578778634] &gt; 0 THEN &quot;▲&quot;&#13;&#10;ELSE &quot;▼&quot;&#13;&#10;END' />
      </column>
      <column caption='View by Dimension' datatype='string' name='[Calculation_1234549297608560652]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[State Parameter] = &quot;Region&quot; THEN [Region]&#13;&#10;ELSEIF [Parameters].[State Parameter] = &quot;Category&quot; THEN [Category]&#13;&#10;ELSEIF [Parameters].[State Parameter] = &quot;Sub-Category&quot; THEN [Sub-Category]&#13;&#10;END' />
      </column>
      <column caption='Metric Value' datatype='real' name='[Calculation_143270813220548608]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='// Metric Value (numeric)&#13;&#10;CASE [Parameters].[Category Parameter]&#13;&#10;WHEN &quot;Sales&quot; THEN SUM([Sales])&#13;&#10;WHEN &quot;Profit&quot; THEN SUM([Profit])&#13;&#10;WHEN &quot;# Orders&quot; THEN COUNTD([Order ID])&#13;&#10;END' />
      </column>
      <column caption='Profit Margin' datatype='real' name='[Calculation_143270813220782081]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Profit]) / SUM([Sales])' />
      </column>
      <column caption='Return rate ' datatype='real' name='[Calculation_143270813230706693]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_143270813232197638]) / SUM([Quantity])' />
      </column>
      <column caption='Returned Quantity' datatype='integer' name='[Calculation_143270813232197638]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Returned] = &quot;Yes&quot; THEN [Quantity] ELSE 0 END' />
      </column>
      <column caption='Metric Row Value' datatype='real' name='[Calculation_143270813238476807]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Category Parameter] = &quot;Sales&quot; THEN [Sales]&#13;&#10;ELSEIF [Parameters].[Category Parameter] = &quot;Profit&quot; THEN [Profit]&#13;&#10;ELSE // Orders&#13;&#10;  1   // one order per row; LOD will sum these to count orders&#13;&#10;END' />
      </column>
      <column caption='Product Metric All' datatype='real' name='[Calculation_143270813238689800]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Product Name] : SUM([Calculation_143270813238476807]) }' />
      </column>
      <column caption='ProductRankAll' datatype='integer' name='[Calculation_143270813239169033]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_DENSE( SUM([Calculation_143270813238689800]), &apos;desc&apos; )'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
      <column aggregation='None' caption='Orders per Customer (bin)' datatype='integer' name='[Orders per Customer (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[Calculation_1234549297565155330]' peg='0' size='1' />
      </column>
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_9347997C540C4232901CFAF413D611ED]' role='measure' type='quantitative' />
      <column caption='People1' datatype='table' name='[__tableau_internal_object_id__].[People_90401336EDF24F39B6768E0036DFAFA3]' role='measure' type='quantitative' />
      <column caption='Returns' datatype='table' name='[__tableau_internal_object_id__].[Returns_33329071CD8847619F56CAA108E5E03A]' role='measure' type='quantitative' />
      <column-instance column='[Top 50 Customers by Sales.]' derivation='InOut' name='[io:Top 50 Customers by Sales.:nk]' pivot='key' type='nominal'>
        <aliases>
          <alias key='false' value='OTHERS' />
          <alias key='true' value='TOP 50 CUSTOMERS' />
        </aliases>
      </column-instance>
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <group caption='Top 50 Customers by Sales.' name='[Top 50 Customers by Sales.]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='50' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Customer Name]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Shreyas/AppData/Local/Temp/TableauTemp/#TableauTemp_04n4ftj1sdv0id13pk7up1a0t27k.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='09/02/2025 07:38:07 AM' username='tableau_internal_user'>
          <relation type='collection'>
            <relation name='Orders_9347997C540C4232901CFAF413D611ED' table='[Extract].[Orders_9347997C540C4232901CFAF413D611ED]' type='table' />
            <relation name='People_90401336EDF24F39B6768E0036DFAFA3' table='[Extract].[People_90401336EDF24F39B6768E0036DFAFA3]' type='table' />
            <relation name='Returns_33329071CD8847619F56CAA108E5E03A' table='[Extract].[Returns_33329071CD8847619F56CAA108E5E03A]' type='table' />
          </relation>
          <cols>
            <map key='[Category]' value='[Orders_9347997C540C4232901CFAF413D611ED].[Category]' />
            <map key='[City]' value='[Orders_9347997C540C4232901CFAF413D611ED].[City]' />
            <map key='[Country]' value='[Orders_9347997C540C4232901CFAF413D611ED].[Country]' />
            <map key='[Customer ID]' value='[Orders_9347997C540C4232901CFAF413D611ED].[Customer ID]' />
            <map key='[Customer Name]' value='[Orders_9347997C540C4232901CFAF413D611ED].[Customer Name]' />
            <map key='[Discount]' value='[Orders_9347997C540C4232901CFAF413D611ED].[Discount]' />
            <map key='[Order Date]' value='[Orders_9347997C540C4232901CFAF413D611ED].[Order Date]' />
            <map key='[Order ID (Returns)]' value='[Returns_33329071CD8847619F56CAA108E5E03A].[Order ID]' />
            <map key='[Order ID]' value='[Orders_9347997C540C4232901CFAF413D611ED].[Order ID]' />
            <map key='[Person (People1)]' value='[People_90401336EDF24F39B6768E0036DFAFA3].[Person]' />
            <map key='[Postal Code]' value='[Orders_9347997C540C4232901CFAF413D611ED].[Postal Code]' />
            <map key='[Product ID]' value='[Orders_9347997C540C4232901CFAF413D611ED].[Product ID]' />
            <map key='[Product Name]' value='[Orders_9347997C540C4232901CFAF413D611ED].[Product Name]' />
            <map key='[Profit]' value='[Orders_9347997C540C4232901CFAF413D611ED].[Profit]' />
            <map key='[Quantity]' value='[Orders_9347997C540C4232901CFAF413D611ED].[Quantity]' />
            <map key='[Region (People1)]' value='[People_90401336EDF24F39B6768E0036DFAFA3].[Region]' />
            <map key='[Region]' value='[Orders_9347997C540C4232901CFAF413D611ED].[Region]' />
            <map key='[Returned]' value='[Returns_33329071CD8847619F56CAA108E5E03A].[Returned]' />
            <map key='[Row ID]' value='[Orders_9347997C540C4232901CFAF413D611ED].[Row ID]' />
            <map key='[Sales]' value='[Orders_9347997C540C4232901CFAF413D611ED].[Sales]' />
            <map key='[Segment]' value='[Orders_9347997C540C4232901CFAF413D611ED].[Segment]' />
            <map key='[Ship Date]' value='[Orders_9347997C540C4232901CFAF413D611ED].[Ship Date]' />
            <map key='[Ship Mode]' value='[Orders_9347997C540C4232901CFAF413D611ED].[Ship Mode]' />
            <map key='[State]' value='[Orders_9347997C540C4232901CFAF413D611ED].[State]' />
            <map key='[Sub-Category]' value='[Orders_9347997C540C4232901CFAF413D611ED].[Sub-Category]' />
          </cols>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Row ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Row ID]</local-name>
              <parent-name>[Orders_9347997C540C4232901CFAF413D611ED]</parent-name>
              <remote-alias>Row ID</remote-alias>
              <ordinal>0</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9994</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_9347997C540C4232901CFAF413D611ED]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order ID]</local-name>
              <parent-name>[Orders_9347997C540C4232901CFAF413D611ED]</parent-name>
              <remote-alias>Order ID</remote-alias>
              <ordinal>1</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3173</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Orders_9347997C540C4232901CFAF413D611ED]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Order Date]</local-name>
              <parent-name>[Orders_9347997C540C4232901CFAF413D611ED]</parent-name>
              <remote-alias>Order Date</remote-alias>
              <ordinal>2</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1392</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_9347997C540C4232901CFAF413D611ED]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Ship Date]</local-name>
              <parent-name>[Orders_9347997C540C4232901CFAF413D611ED]</parent-name>
              <remote-alias>Ship Date</remote-alias>
              <ordinal>3</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1487</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_9347997C540C4232901CFAF413D611ED]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Mode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Ship Mode]</local-name>
              <parent-name>[Orders_9347997C540C4232901CFAF413D611ED]</parent-name>
              <remote-alias>Ship Mode</remote-alias>
              <ordinal>4</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Orders_9347997C540C4232901CFAF413D611ED]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer ID]</local-name>
              <parent-name>[Orders_9347997C540C4232901CFAF413D611ED]</parent-name>
              <remote-alias>Customer ID</remote-alias>
              <ordinal>5</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1048</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Orders_9347997C540C4232901CFAF413D611ED]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer Name]</local-name>
              <parent-name>[Orders_9347997C540C4232901CFAF413D611ED]</parent-name>
              <remote-alias>Customer Name</remote-alias>
              <ordinal>6</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1048</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Orders_9347997C540C4232901CFAF413D611ED]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Segment</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Segment]</local-name>
              <parent-name>[Orders_9347997C540C4232901CFAF413D611ED]</parent-name>
              <remote-alias>Segment</remote-alias>
              <ordinal>7</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Orders_9347997C540C4232901CFAF413D611ED]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Orders_9347997C540C4232901CFAF413D611ED]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>8</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Orders_9347997C540C4232901CFAF413D611ED]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Orders_9347997C540C4232901CFAF413D611ED]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>9</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>500</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Orders_9347997C540C4232901CFAF413D611ED]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Orders_9347997C540C4232901CFAF413D611ED]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>10</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Orders_9347997C540C4232901CFAF413D611ED]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Postal Code</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Postal Code]</local-name>
              <parent-name>[Orders_9347997C540C4232901CFAF413D611ED]</parent-name>
              <remote-alias>Postal Code</remote-alias>
              <ordinal>11</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>610</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_9347997C540C4232901CFAF413D611ED]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Orders_9347997C540C4232901CFAF413D611ED]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>12</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Orders_9347997C540C4232901CFAF413D611ED]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product ID]</local-name>
              <parent-name>[Orders_9347997C540C4232901CFAF413D611ED]</parent-name>
              <remote-alias>Product ID</remote-alias>
              <ordinal>13</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2051</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Orders_9347997C540C4232901CFAF413D611ED]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Category]</local-name>
              <parent-name>[Orders_9347997C540C4232901CFAF413D611ED]</parent-name>
              <remote-alias>Category</remote-alias>
              <ordinal>14</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Orders_9347997C540C4232901CFAF413D611ED]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sub-Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sub-Category]</local-name>
              <parent-name>[Orders_9347997C540C4232901CFAF413D611ED]</parent-name>
              <remote-alias>Sub-Category</remote-alias>
              <ordinal>15</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Orders_9347997C540C4232901CFAF413D611ED]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Name]</local-name>
              <parent-name>[Orders_9347997C540C4232901CFAF413D611ED]</parent-name>
              <remote-alias>Product Name</remote-alias>
              <ordinal>16</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2025</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Orders_9347997C540C4232901CFAF413D611ED]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sales</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Sales]</local-name>
              <parent-name>[Orders_9347997C540C4232901CFAF413D611ED]</parent-name>
              <remote-alias>Sales</remote-alias>
              <ordinal>17</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3481</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_9347997C540C4232901CFAF413D611ED]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Quantity</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Quantity]</local-name>
              <parent-name>[Orders_9347997C540C4232901CFAF413D611ED]</parent-name>
              <remote-alias>Quantity</remote-alias>
              <ordinal>18</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_9347997C540C4232901CFAF413D611ED]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Discount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Discount]</local-name>
              <parent-name>[Orders_9347997C540C4232901CFAF413D611ED]</parent-name>
              <remote-alias>Discount</remote-alias>
              <ordinal>19</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_9347997C540C4232901CFAF413D611ED]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Profit</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Profit]</local-name>
              <parent-name>[Orders_9347997C540C4232901CFAF413D611ED]</parent-name>
              <remote-alias>Profit</remote-alias>
              <ordinal>20</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3859</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_9347997C540C4232901CFAF413D611ED]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Person</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Person (People1)]</local-name>
              <parent-name>[People_90401336EDF24F39B6768E0036DFAFA3]</parent-name>
              <remote-alias>Person</remote-alias>
              <ordinal>21</ordinal>
              <family>People1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[People_90401336EDF24F39B6768E0036DFAFA3]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region (People1)]</local-name>
              <parent-name>[People_90401336EDF24F39B6768E0036DFAFA3]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>22</ordinal>
              <family>People1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[People_90401336EDF24F39B6768E0036DFAFA3]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Returned</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Returned]</local-name>
              <parent-name>[Returns_33329071CD8847619F56CAA108E5E03A]</parent-name>
              <remote-alias>Returned</remote-alias>
              <ordinal>23</ordinal>
              <family>Returns</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Returns_33329071CD8847619F56CAA108E5E03A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order ID (Returns)]</local-name>
              <parent-name>[Returns_33329071CD8847619F56CAA108E5E03A]</parent-name>
              <remote-alias>Order ID</remote-alias>
              <ordinal>24</ordinal>
              <family>Returns</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>296</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Returns_33329071CD8847619F56CAA108E5E03A]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[io:Top 50 Customers by Sales.:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>true</bucket>
            </map>
            <map to='#edc948'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.060wmiv1b64sij1d3qtcu019woe5].[sum:Calculation_143270813288939535:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.060wmiv1b64sij1d3qtcu019woe5]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.060wmiv1b64sij1d3qtcu019woe5].[sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.060wmiv1b64sij1d3qtcu019woe5].[sum:Profit:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Segment:nk]&#10;[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Consumer&quot;</bucket>
                <bucket>&quot;[federated.060wmiv1b64sij1d3qtcu019woe5].[sum:Calculation_143270813288919053:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#89b8da'>
              <multibucket>
                <bucket>&quot;Corporate&quot;</bucket>
                <bucket>&quot;[federated.060wmiv1b64sij1d3qtcu019woe5].[sum:Calculation_143270813288919053:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b9ddf1'>
              <multibucket>
                <bucket>&quot;Home Office&quot;</bucket>
                <bucket>&quot;[federated.060wmiv1b64sij1d3qtcu019woe5].[sum:Calculation_143270813288919053:qk]&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Person (People1)' />
        <field-sort-custom-order field='Region (People1)' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Metric' datatype='string' name='[Category Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
          <calculation class='tableau' formula='&quot;Sales&quot;' />
        </column>
        <column caption='View by' datatype='string' name='[State Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Region&quot;'>
          <calculation class='tableau' formula='&quot;Region&quot;' />
        </column>
      </datasource-dependencies>
      <object-graph>
        <objects>
          <object caption='Orders' id='Orders_9347997C540C4232901CFAF413D611ED'>
            <properties context=''>
              <relation connection='excel-direct.1jzkef50yy05qy174sein0uwujmr' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='integer' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Orders_9347997C540C4232901CFAF413D611ED' table='[Extract].[Orders_9347997C540C4232901CFAF413D611ED]' type='table' />
            </properties>
          </object>
          <object caption='People1' id='People_90401336EDF24F39B6768E0036DFAFA3'>
            <properties context=''>
              <relation connection='excel-direct.1jzkef50yy05qy174sein0uwujmr' name='People1' table='[People$]' type='table'>
                <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='6'>
                  <column datatype='string' name='Person' ordinal='0' />
                  <column datatype='string' name='Region' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='People_90401336EDF24F39B6768E0036DFAFA3' table='[Extract].[People_90401336EDF24F39B6768E0036DFAFA3]' type='table' />
            </properties>
          </object>
          <object caption='Returns' id='Returns_33329071CD8847619F56CAA108E5E03A'>
            <properties context=''>
              <relation connection='excel-direct.1jzkef50yy05qy174sein0uwujmr' name='Returns' table='[Returns$]' type='table'>
                <columns gridOrigin='A1:B297:no:A1:B297:0' header='yes' outcome='6'>
                  <column datatype='string' name='Returned' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Returns_33329071CD8847619F56CAA108E5E03A' table='[Extract].[Returns_33329071CD8847619F56CAA108E5E03A]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Region]' />
              <expression op='[Region (People1)]' />
            </expression>
            <first-end-point object-id='Orders_9347997C540C4232901CFAF413D611ED' />
            <second-end-point object-id='People_90401336EDF24F39B6768E0036DFAFA3' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Order ID]' />
              <expression op='[Order ID (Returns)]' />
            </expression>
            <first-end-point object-id='Orders_9347997C540C4232901CFAF413D611ED' />
            <second-end-point object-id='Returns_33329071CD8847619F56CAA108E5E03A' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
    <datasource caption='netflix_titles+ (netflix_titles (1))' inline='true' name='federated.1fm8tfy1c260ms12skacg1ywto3m' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='netflix_titles (1)' name='excel-direct.1c23iau00epys711fdscb1nszz28'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Shreyas/Downloads/netflix_titles (1).xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[netflix_titles].[show_id]' />
              <expression op='[netflix_titles_cast].[show_id]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[netflix_titles].[show_id]' />
                <expression op='[netflix_titles_category].[show_id]' />
              </expression>
            </clause>
            <relation connection='excel-direct.1c23iau00epys711fdscb1nszz28' name='netflix_titles' table='[netflix_titles$]' type='table'>
              <columns gridOrigin='A1:I6237:no:A1:I6237:0' header='yes' outcome='2'>
                <column datatype='string' name='duration_minutes' ordinal='0' />
                <column datatype='string' name='duration_seasons' ordinal='1' />
                <column datatype='string' name='type' ordinal='2' />
                <column datatype='string' name='title' ordinal='3' />
                <column datatype='date' name='date_added' ordinal='4' />
                <column datatype='integer' name='release_year' ordinal='5' />
                <column datatype='string' name='rating' ordinal='6' />
                <column datatype='string' name='description' ordinal='7' />
                <column datatype='integer' name='show_id' ordinal='8' />
              </columns>
            </relation>
            <relation connection='excel-direct.1c23iau00epys711fdscb1nszz28' name='netflix_titles_category' table='[netflix_titles_category$]' type='table'>
              <columns gridOrigin='A1:B10001:no:A1:B10001:0' header='yes' outcome='6'>
                <column datatype='string' name='listed_in' ordinal='0' />
                <column datatype='integer' name='show_id' ordinal='1' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.1c23iau00epys711fdscb1nszz28' name='netflix_titles_cast' table='[netflix_titles_cast$]' type='table'>
            <columns gridOrigin='A1:B10001:no:A1:B10001:0' header='yes' outcome='6'>
              <column datatype='string' name='cast' ordinal='0' />
              <column datatype='integer' name='show_id' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[cast]' value='[netflix_titles_cast].[cast]' />
          <map key='[date_added]' value='[netflix_titles].[date_added]' />
          <map key='[description]' value='[netflix_titles].[description]' />
          <map key='[duration_minutes]' value='[netflix_titles].[duration_minutes]' />
          <map key='[duration_seasons]' value='[netflix_titles].[duration_seasons]' />
          <map key='[listed_in]' value='[netflix_titles_category].[listed_in]' />
          <map key='[rating]' value='[netflix_titles].[rating]' />
          <map key='[release_year]' value='[netflix_titles].[release_year]' />
          <map key='[show_id (netflix!titles!cast)]' value='[netflix_titles_cast].[show_id]' />
          <map key='[show_id (netflix!titles!category)]' value='[netflix_titles_category].[show_id]' />
          <map key='[show_id]' value='[netflix_titles].[show_id]' />
          <map key='[title]' value='[netflix_titles].[title]' />
          <map key='[type]' value='[netflix_titles].[type]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[netflix_titles]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:I6237:no:A1:I6237:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[netflix_titles_category]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B10001:no:A1:B10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[netflix_titles_cast]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B10001:no:A1:B10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_minutes</remote-name>
            <remote-type>130</remote-type>
            <local-name>[duration_minutes]</local-name>
            <parent-name>[netflix_titles]</parent-name>
            <remote-alias>duration_minutes</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[netflix!titles_A00C689B67994502A0DA80B4821EC0C4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_seasons</remote-name>
            <remote-type>130</remote-type>
            <local-name>[duration_seasons]</local-name>
            <parent-name>[netflix_titles]</parent-name>
            <remote-alias>duration_seasons</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[netflix!titles_A00C689B67994502A0DA80B4821EC0C4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[netflix_titles]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[netflix!titles_A00C689B67994502A0DA80B4821EC0C4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[title]</local-name>
            <parent-name>[netflix_titles]</parent-name>
            <remote-alias>title</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[netflix!titles_A00C689B67994502A0DA80B4821EC0C4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_added</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date_added]</local-name>
            <parent-name>[netflix_titles]</parent-name>
            <remote-alias>date_added</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[netflix!titles_A00C689B67994502A0DA80B4821EC0C4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>release_year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[release_year]</local-name>
            <parent-name>[netflix_titles]</parent-name>
            <remote-alias>release_year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[netflix!titles_A00C689B67994502A0DA80B4821EC0C4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>130</remote-type>
            <local-name>[rating]</local-name>
            <parent-name>[netflix_titles]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[netflix!titles_A00C689B67994502A0DA80B4821EC0C4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>130</remote-type>
            <local-name>[description]</local-name>
            <parent-name>[netflix_titles]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[netflix!titles_A00C689B67994502A0DA80B4821EC0C4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>show_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[show_id]</local-name>
            <parent-name>[netflix_titles]</parent-name>
            <remote-alias>show_id</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[netflix!titles_A00C689B67994502A0DA80B4821EC0C4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>listed_in</remote-name>
            <remote-type>130</remote-type>
            <local-name>[listed_in]</local-name>
            <parent-name>[netflix_titles_category]</parent-name>
            <remote-alias>listed_in</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[netflix!titles_A00C689B67994502A0DA80B4821EC0C4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>show_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[show_id (netflix!titles!category)]</local-name>
            <parent-name>[netflix_titles_category]</parent-name>
            <remote-alias>show_id</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[netflix!titles_A00C689B67994502A0DA80B4821EC0C4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cast</remote-name>
            <remote-type>130</remote-type>
            <local-name>[cast]</local-name>
            <parent-name>[netflix_titles_cast]</parent-name>
            <remote-alias>cast</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[netflix!titles_A00C689B67994502A0DA80B4821EC0C4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>show_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[show_id (netflix!titles!cast)]</local-name>
            <parent-name>[netflix_titles_cast]</parent-name>
            <remote-alias>show_id</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[netflix!titles_A00C689B67994502A0DA80B4821EC0C4]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='netflix_titles' datatype='table' name='[__tableau_internal_object_id__].[netflix!titles_A00C689B67994502A0DA80B4821EC0C4]' role='measure' type='quantitative' />
      <column caption='Cast' datatype='string' name='[cast]' role='dimension' type='nominal' />
      <column caption='Date Added' datatype='date' name='[date_added]' role='dimension' type='ordinal' />
      <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
      <column caption='Duration Minutes' datatype='string' name='[duration_minutes]' role='dimension' type='nominal' />
      <column caption='Duration Seasons' datatype='string' name='[duration_seasons]' role='dimension' type='nominal' />
      <column caption='Listed In' datatype='string' name='[listed_in]' role='dimension' type='nominal' />
      <column caption='Rating' datatype='string' name='[rating]' role='dimension' type='nominal' />
      <column caption='Release Year' datatype='integer' name='[release_year]' role='dimension' type='quantitative' />
      <column caption='Show Id (Netflix!Titles!Cast)' datatype='integer' name='[show_id (netflix!titles!cast)]' role='dimension' type='ordinal' />
      <column caption='Show Id (Netflix!Titles!Category)' datatype='integer' name='[show_id (netflix!titles!category)]' role='dimension' type='ordinal' />
      <column caption='Show Id' datatype='integer' name='[show_id]' role='dimension' type='ordinal' />
      <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      <column-instance column='[cast]' derivation='None' name='[none:cast:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Shreyas/AppData/Local/Temp/TableauTemp/#TableauTemp_1awgm6f0m68yuv14ci2vu02ck13t.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='09/03/2025 12:43:05 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[cast]' value='[Extract].[cast]' />
            <map key='[date_added]' value='[Extract].[date_added]' />
            <map key='[description]' value='[Extract].[description]' />
            <map key='[duration_minutes]' value='[Extract].[duration_minutes]' />
            <map key='[duration_seasons]' value='[Extract].[duration_seasons]' />
            <map key='[listed_in]' value='[Extract].[listed_in]' />
            <map key='[rating]' value='[Extract].[rating]' />
            <map key='[release_year]' value='[Extract].[release_year]' />
            <map key='[show_id (netflix!titles!cast)]' value='[Extract].[show_id]' />
            <map key='[show_id (netflix!titles!category)]' value='[Extract].[show_id1]' />
            <map key='[show_id]' value='[Extract].[show_id2]' />
            <map key='[title]' value='[Extract].[title]' />
            <map key='[type]' value='[Extract].[type]' />
          </cols>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>duration_minutes</remote-name>
              <remote-type>129</remote-type>
              <local-name>[duration_minutes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>duration_minutes</remote-alias>
              <ordinal>0</ordinal>
              <family>netflix_titles</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>339</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>duration_seasons</remote-name>
              <remote-type>129</remote-type>
              <local-name>[duration_seasons]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>duration_seasons</remote-alias>
              <ordinal>1</ordinal>
              <family>netflix_titles</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>36</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>type</remote-alias>
              <ordinal>2</ordinal>
              <family>netflix_titles</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>title</remote-name>
              <remote-type>129</remote-type>
              <local-name>[title]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>title</remote-alias>
              <ordinal>3</ordinal>
              <family>netflix_titles</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>15367</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date_added</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date_added]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date_added</remote-alias>
              <ordinal>4</ordinal>
              <family>netflix_titles</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>2689</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>release_year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[release_year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>release_year</remote-alias>
              <ordinal>5</ordinal>
              <family>netflix_titles</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>127</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>rating</remote-name>
              <remote-type>129</remote-type>
              <local-name>[rating]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>rating</remote-alias>
              <ordinal>6</ordinal>
              <family>netflix_titles</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>description</remote-name>
              <remote-type>129</remote-type>
              <local-name>[description]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>description</remote-alias>
              <ordinal>7</ordinal>
              <family>netflix_titles</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>15575</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>show_id2</remote-name>
              <remote-type>20</remote-type>
              <local-name>[show_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>show_id2</remote-alias>
              <ordinal>8</ordinal>
              <family>netflix_titles</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15575</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>listed_in</remote-name>
              <remote-type>129</remote-type>
              <local-name>[listed_in]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>listed_in</remote-alias>
              <ordinal>9</ordinal>
              <family>netflix_titles_category</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>57</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>show_id1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[show_id (netflix!titles!category)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>show_id1</remote-alias>
              <ordinal>10</ordinal>
              <family>netflix_titles_category</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15575</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cast</remote-name>
              <remote-type>129</remote-type>
              <local-name>[cast]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cast</remote-alias>
              <ordinal>11</ordinal>
              <family>netflix_titles_cast</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>34135</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>show_id</remote-name>
              <remote-type>20</remote-type>
              <local-name>[show_id (netflix!titles!cast)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>show_id</remote-alias>
              <ordinal>12</ordinal>
              <family>netflix_titles_cast</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15575</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:cast:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Adjoa Andoh&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Alicia Silverstone&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Angad Bedi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ayrton Senna&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bipasha Basu&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burgess Meredith&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cemil Özbayer&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Christopher Kirby&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Danny McBride&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dian Bachar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Elli Thor Magnusson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fatima Sana Shaikh&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gift Ngoepe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Héctor Jiménez&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jack Black&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jason Li&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jill Morrison&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;John Finnegan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Josh Bryceland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kelly Slater&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyle Chandler&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Liam Hughes&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mahavir Bhullar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mark Boone Junior&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Melissa Leo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Milo Gibson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nicholas Campbell&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pablo Paoliello&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Peter Coyote&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ramzi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Riley Voelkel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Russell Wilson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Scott Jurek&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sky Sudberry&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sushant Singh Rajput&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Thomas Vandenberghe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Trevor Tordjman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Werner Daehn&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zamokuhle Nxasana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aakash Dabhade&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alex Medina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Amy Smart&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ashish Kakkad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bianca Santos&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brian Shaw&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Carlos Maycotte&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chicco Jerikho&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cristián de la Fuente&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Debbi Morgan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ed Lauter&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Erica McDermott&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gargi Roychowdhury&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gustav Dyekjaer Giese&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ilian Bergala&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;James Woods&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jenny Slate&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Joe Quesada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jonathan Cherry&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kate B. O&apos;Brien&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kimie Tsukakoshi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Léa Lopez&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Louie Simmons&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marc-André Grondin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Matt Stone&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Michael Smith&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nana Gbewonyo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Olivia Merilahti&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Patrik Baboumian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rafael Montalvo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Richard Kiel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Robert Ri&apos;chard&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Samuel L. Jackson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sharon Leal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Steven Love&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ted Williams&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tony Cacciotti&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vijay Raaz&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yasmin Honeychurch&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Adam Faraizl&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alexa Pano&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andrés Iniesta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Asif Basra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bill Murray&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bruno Bergonzini&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Carson Meyer&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chris Elliott&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dani Rovira&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Deepankar De&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Elisabeth Moss&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Esther Howard&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gautam Gulati&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Harlem Globetrotters&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ingo Olsen&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jarome Iginla&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jerry Reed&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Johan Cruyff&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jorma Taccone&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kathy Bates&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kulbhushan Kharbanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Leonard Gaines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lynn Whitfield&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mario Cantone&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Meagan Good&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mike Myers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nargis Fakhri&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Orlando Carrillo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Penny Downie&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rajesh Sharma&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Richard Tyson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Romany Malco&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Satish Kaushik&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sigurdur Jonsson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sukhbir Singh&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Texas Battle&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tony McCoy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vince Carter&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zachary Quinto&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Alain Hernández&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Allan Kournikova&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Aparshakti Khurana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ben Kingsley&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bobby Hanson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Caetlyn Collins&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Channing Tatum&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Clara Segura&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dash Mihok&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Diego Eduardo Gomez&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Emily Morris&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Frank Vincent&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Glenn Plummer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hiyori Kon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jackson White&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jean Dell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jim Nicholson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;John Ratzenberger&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Julian Lewis Jones&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kevin Costner&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lam Yiu-sing&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lilly Blacker&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Manav Kaul&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marsha Aruan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Michael Kopsa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Molly Ringwald&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nihal Yalçın&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pamela Anderson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pooch Hall&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Raúl Villegas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ritwik Sahore&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sainty Nelsen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sean McCann&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sornsin Maneewan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Talia Shire&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tinnu Anand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ulrich Thomsen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;William Hope&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zydrunas Savickas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Akiva Schaffer&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Alison Pill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anikie Maguire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Barbara Cabrita&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Biswajit Chakraborty&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burhanuddin Ohorella&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cengiz Bozkurt&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Christopher Meyer&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Danny Trejo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dibyendu Bhattacharya&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Elnaaz Norouzi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Felipe Izquierdo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gilbert Montoya&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Heidar Logi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jack McGee&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jay Acovone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jill Quigg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;John Getz&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Josh Charles&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kenneth Mitchell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyle Jameson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Liana Liberato&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maika Monroe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mark Cuban&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Melissa McMeekin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Miriam Balderas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nicholas Colasanto&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Paco Rueda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Peter Dante&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Randy Quaid&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rio Dewanto&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ryan Howard&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Scott Parker&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sofia Wylie&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sylvester Stallone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tiarnie Coupland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trey Parker&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wilford Brimley&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zazie Beetz&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Adam Sandler&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Alexandra Jiménez&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andrew Creer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ata Demirer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Billie Blain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bryan Fogel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carter Hastings&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chris Klein&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Danica Patrick&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dendrie Taylor&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Elisabeth Röhm&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eugene Levy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gemma Chua-Tran&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Harry Caesar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Isabelle Andary-Geslin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jasmine Kaur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jessica Alba&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Johannes Lassen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Joseph Bono&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Keanu Reeves&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kunaal Roy Kapur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Leonardo Sbaraglia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ma Chi Wai&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mario Gallo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Medi Sadoun&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mike Tyson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nate Miller&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Osmar Nuñez&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Peta Shannon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rajkummar Rao&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Richy Müller&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ron Perlman&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Satnam Singh Bhamara&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Simon Baker&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sunil Thapa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Théo Fernandez&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Trae Robin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vivek Ranadivé&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zaira Wasim&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Aldo Tansani&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Amy Adams&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Asha Bromfield&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bharat Kaul&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brendan Fairclough&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Carla Gugino&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chelsey Reist&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Conor McGregor&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;David Verdaguer&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dr. Dean Ornish&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Erica Banchi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gaby Espino&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guggu Gill&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ice Cube&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;James Lawrence&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jennifer Garner&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Joe Pantoliano&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jon Lange&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Karim Benzema&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kim Coates&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laurent Pakihivatau&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lochlyn Munro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maoni Talalua&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Matt Damon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Michael Roof&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morten Vang Simonsen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Noah Silver&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Patrick O&apos;Brien Demsey&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rachael Blake&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Richard Farnsworth&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Robert Prosky&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sam Upton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shamier Anderson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sterling K. Brown&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tasha Smith&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tommy Morrison&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Verne Troyer&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ximena Guzmán&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aamir Khan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alex Morgan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ana de la Reguera&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ashlee Brian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bill Courtney&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brian White&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Carmel Johnson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chien-Ming Wang&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cyron Melville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Debby Ryan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eddie Albert&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ernest Borgnine&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Garrett Morris&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hafþór Júlíus Björnsson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iliana Zabeth&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jaran Ngamdee&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jeremiah Sparks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Joe Spinell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jonathan Loughran&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kate Box&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kochakorn Nimakorn&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lee Dixon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Luciana Aymar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marcela Guerty&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Maudy Koesnaedi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Michael Thomas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nantawut Boonrubsub&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Olly Wilkins&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pau Gasol&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Raj Labade&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Richard Kohnke&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Robert Vaughn&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sanya Malhotra&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Shernaz Patel&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Stevie Lynn Jones&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Telma Hopkins&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tony Darrow&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vijay S. Kumar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yasmine Bleeth&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Alba Ribas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Amit Sadh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Art Hindle&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bessarion Udesiani&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Brandi Chastain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cara Ricketts&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chavis Daniels&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Colby French&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;David Milchard&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dolph Lundgren&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Eric Nelsen&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fumio Demura&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Grant Korgan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ian McShane&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;James Hampton&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jeneva Talwar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Joe Dorsey&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jomari Angeles&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Justin Timberlake&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kharaj Mukherjee&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lara Dutta&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lisa Cheng&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Manop Aswathep&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mathieu Kassovitz&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Michael Rainey Jr.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Morgan Mitchell&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Noah Centineo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Patrick Lyster&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prince Kanwaljit Singh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rich Froning&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Robert De Niro&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sam Hill&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Shafira Umm&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Stephan James&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tarlochan Singh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tom Everett&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vannapoom Songsuparp&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wyatt Russell&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Adam Silver&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Alexis Viera&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Andrew Neethling&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Aufa Assagaf&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Billy Crudup&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Buakaw Banchamek&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cassi Thomson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chris Parnell&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Danielle Carter&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Denis Theriault&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Elisha Cuthbert&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eva De Dominici&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Genevieve Hegney&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Harry DeLeyer&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Isla Fisher&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jason James Richter&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jharrel Jerome&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;John Abraham&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Joseph Cure&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Keke Palmer&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kunal Nayyar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Les Miles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Macarena García&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mario Moran&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Melanie Lynskey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mikkel Boe Følsgaard&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nathan West&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Özlem Türkad&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Petelo Sealeu&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rajni Basumatary&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rick Gonzalez&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rosanna Arquette&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Satyadeep Misra&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Simon Paul Mutuyimana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Suparna Marwah&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Theresa Saldana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Trevor Berbick&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wayne Duvall&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Zak Santiago&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Alain Prost&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Allen Iverson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ari Sihasale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ben Spence&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bobby Robson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cal Ripken Jr.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chantal Lauby&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Claudio Rissi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dave Brown&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Digvijay Deshmukh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Emir Mahira&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Frank Williams&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Goldie Hawn&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hugh Thompson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jajang C. Noer&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jean Smart&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jim O&apos;Heir&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;John Schuhmacher&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Julie Kay Lumasag&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kevin Jorgeson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lamar Johnson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lin Laishram&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Manav Vij&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marton Csokas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Michael Mantenuto&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Monica Sayangbati&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nilesh Diwekar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paresh Rawal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prachi Desai&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rendy Khrisna&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rob Brown&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sakshi Tanwar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sean Russel Herman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Souleymane M&apos;Baye&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tapsee Pannu&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tito Valverde&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Usain Bolt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;William Jordan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Alana Haim&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Allen Maldonado&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Arnold Schwarzenegger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bernadette Peters&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Boman Irani&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Callum Keith Rennie&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Charles Robinson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Claudio Torres&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dave schultz&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Diljit Dosanjh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Emraan Hashmi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fred Tolliver Jr&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Goran Visnjic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hulk Hogan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jake Epstein&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jed Dy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jimmy Moses&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;John Steadman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Justin Kirk&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kevin Linehan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lane R. Davis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lin Shaye&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mandy Takhar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mason Vale Cotton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Michael Nouri&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montrail &apos;Money&apos; Brown&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nimai Delgado&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Parker Jackson Cartwright&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prasenjit Chatterjee&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Reza Rahadian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rob Machado&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sal Masekela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Seann William Scott&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spencer Grammer&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tara Basro&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Todd Field&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Valerie Bader&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Wiyona Yeung&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Albert Pujols&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Amrita Puri&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Artiwara Kongmalai&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Beverley Breuer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brandon Semenuk&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Carl Weathers&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chelsea Islan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Colman Domingo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;David Saracino&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dotsie Bausch&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eric Peter-Kaiser&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gabe York&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grigory Rodchenkov&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ian Wright&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;James Handy&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jennifer Beals&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Joe Jackson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jon Heder&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kanchan Mullick&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kim Basinger&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Laura Birn&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lisa Marie Caruk&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manuela Couto&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Matt Craven&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Michael Rapaport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Morgan Spector&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Noah Emmerich&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Patrick Mofokeng&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Priyanka Chopra&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Richard Clarkin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Robert Duvall&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sam Skoryna&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shakti Singh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Stephanie Beatriz&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Taryn Manning&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tommy Caldwell&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Veerendra Saxena&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Xavi Hernández&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Alessandra de Rossi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Amy Handley&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ashanti&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bianca Hunter&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brett Hull&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Carlos Alcántara&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chester Tam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Corey Parker Robinson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Deanne Lauvin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dwight Howard&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Erica Farías&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Garfield Wilson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guillermo Furiase&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ikranagara&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;James Wilks&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jenny McCarthy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Joe Pesci&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jon Lovitz&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Karra Elejalde&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kim Ramirez&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lawrence Gilliard Jr.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lorena Ramírez&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Marc Balaguer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Matt Stern&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Michael Shannon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mr. T&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;O.C. Brown&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Patrick Timsit&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rachel D&apos;Sena&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Richard Gant&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Robert Redford&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Samson Coulter&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sharman Joshi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Steve Hawk&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Taylor John Smith&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tony Burton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vidya Balan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Yahya Abdul-Mateen II&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Akshay Kumar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alka Badola Kaushal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Antwon Tanner&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Barbara Hershey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Blake Clark&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burt Reynolds&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cesar Gonzalez&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chuck D.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Darius Rose&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Diedrich Bader&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Elvire Emanuelle&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Felix Starck&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Glenn Close&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Henning Jensen&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jack Nicklaus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jay Baruchel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jim Codrington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;John Hennigan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jossi Wells&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kenneth Welsh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kyle MacLachlan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Liev Schreiber&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malcolm Goodwin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mark Renneker&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Melvin Gregg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mohit Bhaskar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nick Loeb&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Paco Sagarzazu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Phutharit Prombandal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ranjit Bawa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rip Esselstyn&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ryan Walter&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Scott Porter&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Soni Razdan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sylvia Meals&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tim Roth&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Txema Blasco&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Will Arnett&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zion Clark&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Adam Tuominen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ali Labidi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Andy Samberg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Augustin Valery&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Billy Schneider&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bunga Citra Lestari&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cathy Moriarty&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Christian Bale&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Danielle Haim&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Denise Dowse&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Elizabeth Debicki&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fairuza Balk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gérard Depardieu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Harsh Sethi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jacek Koman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jason Jones&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jill Marie Jones&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;John Douglas Thompson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Josh Brolin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kelli Berglund&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kurt Russell&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lewis Hamilton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mahabir Bhullar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mario Van Peebles&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Melissa Bonne&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Miles Chandler&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Necati Bilgiç&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pablo Granados&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Peter Berg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ramona Milano&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ridho Hafiedz&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rose McIver&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Scott Johnson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sissy Spacek&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Susan Ruttan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Thomas Cocquerel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trevor Einhorn&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wendel Clark&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zakariya Gouram&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Aaron Jeffery&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alex Neustaedter&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ana Golja&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ashleigh Ross&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bill Duke&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brigitte Nielsen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Carmelo Anthony&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chris Bauer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dalip Tahil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Deep Joshi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eddie Cahill&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Esben Smed Jensen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gary Lineker&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hannah Simone&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ilkka Koivula&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jared Abrahamson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jeremie Phenom Thomas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Joel Bosqued&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jonathan Silverman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kate Reinders&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kokoy DeSantos&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Leleti Khumalo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luis Gerardo Méndez&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marcus Graham&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maya Rudolph&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Miguel Perez&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Naomi Sequeira&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Omid Djalili&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Paul Merson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rajat Ganguly&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Richard Montoya&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Robert Villar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sarah Fisher&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Shia LaBeouf&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sugar Ray Leonard&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Teotola Maka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tony Hawk&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ville Virtanen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yuen Qiu&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Alanah Gilbert&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Amari Avery&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Arshad Warsi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bess Meyer&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Brad Leland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Calum Von Moger&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Charles Tyner&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cody Fern&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;David Goldman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dimple Kapadia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Eric Kot&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fred Willard&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Graham Rogers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ian Fried&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jake Macapagal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jeff Bridges&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Joe Don Baker&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jolente De Keersmaeker&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Justin Quintal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Khalil Ramos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lanette Ware&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lionel Messi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Manny Pacquiao&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Masood Akhtar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Michael Pataki&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morgan Freeman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nina Pearce&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Patricia Clarkson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prem Chopra&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ricardo Pereira&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rob Ray&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sam Hammer&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seema Kaushal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Stefanie Scott&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tarık Ünlüoğlu&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Toki Pilioko&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vanessa Angel&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Woody Harrelson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Al Whiting&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Allan Hyde&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Anushka Sharma&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bebeto Leutually&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Blanche Gardin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burt Young&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cesar Montano&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chutirada Junthit&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Darshan Kumar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Diego Chavez&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Elysia Markou&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Frank Adonis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Glenn Fredly&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Henry Winkler&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jack Tomich&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jay Pennison&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jim Gaffigan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;John Pleshette&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Juan Manuel Montilla&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kenny Basumatary&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Laila Ali&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lili Karamalikis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malik Bine&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mark Wahlberg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mert Aran&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Moises Arias&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nico Vink&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pam Dawber&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Polly Holliday&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rapeepat Ekpankul&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rishi Kapoor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sage Stallone&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sean Giambrone&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sonja Sohn&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T.J. Miller&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Timmy Reyes&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tyler Perez&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Will Sasso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zooey Deschanel&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Abdurrahman Arif&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Alex Russell&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;André Holland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Asia Argento&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bill Hader&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brontis Jodorowsky&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Carroll Shelby&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chris Burkard&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Damien Mander&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Deepak Shirke&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eddie Hall&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Este Haim&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gary Player&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hapi Murphy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Indrasish Roy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jared Kemp&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jeremy Lindsay Taylor&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Joely Fisher&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Joonas Saartamo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kate Vernon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kuang Yang&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Leo Maitimu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lyes Salem&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marguerite Wheatley&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mckenna Grace&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mikaele Tuugahala&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Naomi Watts&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Orhan Güner&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Payel Sarkar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rajendranath Zutshi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Richard Roxburgh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Robin Das&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sarah Jeffery&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Shishir Sharma&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Suhani Bhatnagar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tess Fowler&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tony Kgoroge&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vin Diesel&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zach McGowan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='netflix_titles' id='netflix!titles_A00C689B67994502A0DA80B4821EC0C4'>
            <properties context=''>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[netflix_titles].[show_id]' />
                    <expression op='[netflix_titles_cast].[show_id]' />
                  </expression>
                </clause>
                <relation join='inner' type='join'>
                  <clause type='join'>
                    <expression op='='>
                      <expression op='[netflix_titles].[show_id]' />
                      <expression op='[netflix_titles_category].[show_id]' />
                    </expression>
                  </clause>
                  <relation connection='excel-direct.1c23iau00epys711fdscb1nszz28' name='netflix_titles' table='[netflix_titles$]' type='table'>
                    <columns gridOrigin='A1:I6237:no:A1:I6237:0' header='yes' outcome='2'>
                      <column datatype='string' name='duration_minutes' ordinal='0' />
                      <column datatype='string' name='duration_seasons' ordinal='1' />
                      <column datatype='string' name='type' ordinal='2' />
                      <column datatype='string' name='title' ordinal='3' />
                      <column datatype='date' name='date_added' ordinal='4' />
                      <column datatype='integer' name='release_year' ordinal='5' />
                      <column datatype='string' name='rating' ordinal='6' />
                      <column datatype='string' name='description' ordinal='7' />
                      <column datatype='integer' name='show_id' ordinal='8' />
                    </columns>
                  </relation>
                  <relation connection='excel-direct.1c23iau00epys711fdscb1nszz28' name='netflix_titles_category' table='[netflix_titles_category$]' type='table'>
                    <columns gridOrigin='A1:B10001:no:A1:B10001:0' header='yes' outcome='6'>
                      <column datatype='string' name='listed_in' ordinal='0' />
                      <column datatype='integer' name='show_id' ordinal='1' />
                    </columns>
                  </relation>
                </relation>
                <relation connection='excel-direct.1c23iau00epys711fdscb1nszz28' name='netflix_titles_cast' table='[netflix_titles_cast$]' type='table'>
                  <columns gridOrigin='A1:B10001:no:A1:B10001:0' header='yes' outcome='6'>
                    <column datatype='string' name='cast' ordinal='0' />
                    <column datatype='integer' name='show_id' ordinal='1' />
                  </columns>
                </relation>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_7645488BB667403285D78A33B6B98CFD]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Assignment 6' />
      <command command='tsc:brush'>
        <param name='field-captions' value='View By' />
        <param name='target' value='Assignment 6' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Assignment 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='sample_-_superstore (1)' name='federated.060wmiv1b64sij1d3qtcu019woe5' />
          </datasources>
          <datasource-dependencies datasource='federated.060wmiv1b64sij1d3qtcu019woe5'>
            <column caption='Sales (%)' datatype='real' default-format='p0%' name='[Calculation_1047086962465337353]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Sales]) / TOTAL(SUM([Sales]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Profit (%)' datatype='real' default-format='p0%' name='[Calculation_1047086962465738762]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit]) / TOTAL(SUM([Profit]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Sales % of Region Row' datatype='real' default-format='p0%' name='[Calculation_1047086962476732437]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Sales]) / TOTAL(SUM([Sales]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Profit % of Region Row' datatype='real' default-format='p0%' name='[Calculation_1047086962476863510]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit]) / TOTAL(SUM([Profit]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1047086962465337353]' derivation='User' name='[usr:Calculation_1047086962465337353:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_1047086962465738762]' derivation='User' name='[usr:Calculation_1047086962465738762:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_1047086962476732437]' derivation='User' name='[usr:Calculation_1047086962476732437:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_1047086962476863510]' derivation='User' name='[usr:Calculation_1047086962476863510:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.060wmiv1b64sij1d3qtcu019woe5].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_1047086962465337353:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_1047086962465738762:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.060wmiv1b64sij1d3qtcu019woe5].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_1047086962476732437:qk:1]&quot;</bucket>
              <bucket>&quot;[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_1047086962476863510:qk:1]&quot;</bucket>
              <bucket>&quot;[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_1047086962465337353:qk]&quot;</bucket>
              <bucket>&quot;[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_1047086962465738762:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <single-value-per-nest-shelf-sorts>
            <single-value-per-nest-shelf-sort dimension-to-sort='[federated.060wmiv1b64sij1d3qtcu019woe5].[none:Category:nk]' direction='ASC' measure-to-sort-by='[federated.060wmiv1b64sij1d3qtcu019woe5].[none:Category:nk]' shelf='rows' />
          </single-value-per-nest-shelf-sorts>
          <slices>
            <column>[federated.060wmiv1b64sij1d3qtcu019woe5].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.060wmiv1b64sij1d3qtcu019woe5].[none:Region:nk]' value='216' />
            <format attr='width' field='[federated.060wmiv1b64sij1d3qtcu019woe5].[:Measure Names]' value='101' />
            <format attr='text-format' field='[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_1047086962465337353:qk]' value='p0%' />
            <format attr='border-style' scope='cols' value='solid' />
            <format attr='border-style' scope='rows' value='solid' />
            <format attr='color' data-class='subtotal' scope='cols' value='#5555ff' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' scope='cols' value='1' />
            <format attr='border-style' scope='cols' value='solid' />
            <format attr='background-color' value='#00000000' />
            <format attr='background-color' scope='cols' value='#55aaff' />
            <format attr='background-color' data-class='total' scope='cols' value='#00000000' />
            <format attr='background-color' data-class='subtotal' scope='cols' value='#00000000' />
            <format attr='background-color' field='[federated.060wmiv1b64sij1d3qtcu019woe5].[none:Region:nk]' value='#000000' />
            <format attr='color' data-class='total' field='[federated.060wmiv1b64sij1d3qtcu019woe5].[none:Region:nk]' value='#000000' />
            <format attr='color' data-class='subtotal' field='[federated.060wmiv1b64sij1d3qtcu019woe5].[none:Region:nk]' value='#000000' />
            <format attr='background-color' field='[federated.060wmiv1b64sij1d3qtcu019woe5].[:Measure Names]' value='#ffaa00' />
            <format attr='color' data-class='subtotal' field='[federated.060wmiv1b64sij1d3qtcu019woe5].[none:Sub-Category:nk]' value='#5555ff' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='background-color' value='#5555ff' />
            <format attr='color' value='#ffffff' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='color' scope='cols' value='#f5f5f5' />
            <format attr='background-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_1047086962476863510:qk:1]' value='p0.0%' />
            <format attr='color' field='[federated.060wmiv1b64sij1d3qtcu019woe5].[none:Region:nk]' value='#ffffff' />
            <format attr='color' field='[federated.060wmiv1b64sij1d3qtcu019woe5].[:Measure Names]' value='#ffffff' />
            <format attr='color' field='[federated.060wmiv1b64sij1d3qtcu019woe5].[none:Category:nk]' value='#5555ff' />
            <format attr='color' field='[federated.060wmiv1b64sij1d3qtcu019woe5].[none:Sub-Category:nk]' value='#000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' scope='cols' value='solid' />
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='2' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[federated.060wmiv1b64sij1d3qtcu019woe5].[Multiple Values]' />
              <lod column='[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_1047086962476732437:qk:1]' />
              <lod column='[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_1047086962476863510:qk:1]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([federated.060wmiv1b64sij1d3qtcu019woe5].[none:Category:nk] / [federated.060wmiv1b64sij1d3qtcu019woe5].[none:Sub-Category:nk])</rows>
        <cols>([federated.060wmiv1b64sij1d3qtcu019woe5].[none:Region:nk] / [federated.060wmiv1b64sij1d3qtcu019woe5].[:Measure Names])</cols>
        <subtotals>
          <column>[federated.060wmiv1b64sij1d3qtcu019woe5].[none:Category:nk]</column>
          <column>[federated.060wmiv1b64sij1d3qtcu019woe5].[none:Region:nk]</column>
        </subtotals>
        <percentages enabled='false' mode='row' />
      </table>
      <simple-id uuid='{625433FE-7B8A-4003-A6BE-6B0360CF61AC}' />
    </worksheet>
    <worksheet name='Assignment 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='netflix_titles+ (netflix_titles (1))' name='federated.1fm8tfy1c260ms12skacg1ywto3m' />
          </datasources>
          <datasource-dependencies datasource='federated.1fm8tfy1c260ms12skacg1ywto3m'>
            <column caption='Cast' datatype='string' name='[cast]' role='dimension' type='nominal' />
            <column-instance column='[title]' derivation='CountD' name='[ctd:title:qk]' pivot='key' type='quantitative' />
            <column caption='Listed In' datatype='string' name='[listed_in]' role='dimension' type='nominal' />
            <column-instance column='[cast]' derivation='None' name='[none:cast:nk]' pivot='key' type='nominal' />
            <column-instance column='[listed_in]' derivation='None' name='[none:listed_in:nk]' pivot='key' type='nominal' />
            <column-instance column='[title]' derivation='None' name='[none:title:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fm8tfy1c260ms12skacg1ywto3m].[none:listed_in:nk]'>
            <groupfilter function='member' level='[none:listed_in:nk]' member='&quot;Sports Movies&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fm8tfy1c260ms12skacg1ywto3m].[none:type:nk]'>
            <groupfilter function='member' level='[none:type:nk]' member='&quot;Movie&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1fm8tfy1c260ms12skacg1ywto3m].[none:cast:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1fm8tfy1c260ms12skacg1ywto3m].[ctd:title:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1fm8tfy1c260ms12skacg1ywto3m].[none:type:nk]</column>
            <column>[federated.1fm8tfy1c260ms12skacg1ywto3m].[none:listed_in:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1fm8tfy1c260ms12skacg1ywto3m].[none:title:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1fm8tfy1c260ms12skacg1ywto3m].[none:cast:nk]</rows>
        <cols>[federated.1fm8tfy1c260ms12skacg1ywto3m].[ctd:title:qk]</cols>
      </table>
      <simple-id uuid='{13580411-AAFA-47DD-A39A-4105329DF292}' />
    </worksheet>
    <worksheet name='Assignment 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='sample_-_superstore (1)' name='federated.060wmiv1b64sij1d3qtcu019woe5' />
          </datasources>
          <datasource-dependencies datasource='federated.060wmiv1b64sij1d3qtcu019woe5'>
            <column aggregation='Sum' caption='Orders per Customer' datatype='integer' name='[Calculation_1234549297565155330]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ FIXED [Customer ID] : COUNTD([Order ID]) }' />
            </column>
            <column datatype='string' name='[Customer ID]' role='dimension' type='nominal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column aggregation='None' caption='Orders per Customer (bin)' datatype='integer' name='[Orders per Customer (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_1234549297565155330]' peg='0' size='1' />
            </column>
            <column-instance column='[Customer ID]' derivation='CountD' name='[ctd:Customer ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Orders per Customer (bin)]' derivation='None' name='[none:Orders per Customer (bin):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <text column='[federated.060wmiv1b64sij1d3qtcu019woe5].[ctd:Customer ID:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.060wmiv1b64sij1d3qtcu019woe5].[ctd:Customer ID:qk]</rows>
        <cols>[federated.060wmiv1b64sij1d3qtcu019woe5].[none:Orders per Customer (bin):qk]</cols>
        <show-full-range>
          <column>[federated.060wmiv1b64sij1d3qtcu019woe5].[Orders per Customer (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{84B71421-B74A-47A0-8132-2C1319AED9DD}' />
    </worksheet>
    <worksheet name='Assignment 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='sample_-_superstore (1)' name='federated.060wmiv1b64sij1d3qtcu019woe5' />
          </datasources>
          <datasource-dependencies datasource='federated.060wmiv1b64sij1d3qtcu019woe5'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Top 50 Customers by Sales.]' derivation='InOut' name='[io:Top 50 Customers by Sales.:nk]' pivot='key' type='nominal'>
              <aliases>
                <alias key='false' value='OTHERS' />
                <alias key='true' value='TOP 50 CUSTOMERS' />
              </aliases>
            </column-instance>
            <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='361' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.060wmiv1b64sij1d3qtcu019woe5].[io:Top 50 Customers by Sales.:nk]' />
              <wedge-size column='[federated.060wmiv1b64sij1d3qtcu019woe5].[sum:Sales:qk]' />
              <size column='[federated.060wmiv1b64sij1d3qtcu019woe5].[sum:Sales:qk]' />
              <text column='[federated.060wmiv1b64sij1d3qtcu019woe5].[pcto:sum:Sales:qk]' />
              <text column='[federated.060wmiv1b64sij1d3qtcu019woe5].[io:Top 50 Customers by Sales.:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.060wmiv1b64sij1d3qtcu019woe5].[io:Top 50 Customers by Sales.:nk]</run>
                <run>&gt;&#10;&lt;</run>
                <run>[federated.060wmiv1b64sij1d3qtcu019woe5].[pcto:sum:Sales:qk]</run>
                <run>&gt;&#10;&lt;</run>
                <run>[federated.060wmiv1b64sij1d3qtcu019woe5].[sum:Sales:qk]</run>
                <run>&gt;&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{C37EDB55-ACC7-4D64-93F9-304A3B03499C}' />
    </worksheet>
    <worksheet name='Assignment 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='sample_-_superstore (1)' name='federated.060wmiv1b64sij1d3qtcu019woe5' />
          </datasources>
          <datasource-dependencies datasource='federated.060wmiv1b64sij1d3qtcu019woe5'>
            <column caption='Current Year Profit' datatype='real' name='[Calculation_1234549297578364935]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF YEAR([Order Date]) = {MAX(YEAR([Order Date]))} THEN [Profit] END' />
            </column>
            <column caption='Previous Year Profit' datatype='real' name='[Calculation_1234549297578483720]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF YEAR([Order Date]) = {MAX(YEAR([Order Date])) - 1} THEN [Profit] END' />
            </column>
            <column caption='Profit Growth %' datatype='real' name='[Calculation_1234549297578778634]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Calculation_1234549297578364935]) - SUM([Calculation_1234549297578483720]))&#13;&#10;/ SUM([Calculation_1234549297578483720])' />
            </column>
            <column caption='Arrow Symbol' datatype='string' name='[Calculation_1234549297579102219]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1234549297578778634] &gt; 0 THEN &quot;▲&quot;&#13;&#10;ELSE &quot;▼&quot;&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1234549297578364935]' derivation='Sum' name='[sum:Calculation_1234549297578364935:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1234549297578778634]' derivation='User' name='[usr:Calculation_1234549297578778634:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1234549297579102219]' derivation='User' name='[usr:Calculation_1234549297579102219:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.060wmiv1b64sij1d3qtcu019woe5].[yr:Order Date:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Order Date:ok]' member='2014' />
              <groupfilter function='member' level='[yr:Order Date:ok]' member='2015' />
              <groupfilter function='member' level='[yr:Order Date:ok]' member='2016' />
              <groupfilter function='member' level='[yr:Order Date:ok]' member='2017' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.060wmiv1b64sij1d3qtcu019woe5].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_1234549297578778634:qk]' value='p0.00%' />
            <format attr='text-format' field='[federated.060wmiv1b64sij1d3qtcu019woe5].[sum:Calculation_1234549297578364935:qk]' value='c&quot;$&quot;#,##0,.00K' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_1234549297578778634:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_1234549297578778634:qk]' />
              <text column='[federated.060wmiv1b64sij1d3qtcu019woe5].[sum:Calculation_1234549297578364935:qk]' />
              <text column='[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_1234549297579102219:nk]' />
              <text column='[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_1234549297578778634:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='18'><![CDATA[<[federated.060wmiv1b64sij1d3qtcu019woe5].[sum:Calculation_1234549297578364935:qk]>]]></run>
                <run><![CDATA[
<[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_1234549297579102219:nk]> <[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_1234549297578778634:qk]> vs PY
]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{5E7F3528-9B88-46B5-BA98-7970BA0BE9E0}' />
    </worksheet>
    <worksheet name='Assignment 6'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sales By &lt;</run>
            <run>[Parameters].[State Parameter]</run>
            <run>&gt;&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='sample_-_superstore (1)' name='federated.060wmiv1b64sij1d3qtcu019woe5' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='View by' datatype='string' name='[State Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Region&quot;'>
              <calculation class='tableau' formula='&quot;Region&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.060wmiv1b64sij1d3qtcu019woe5'>
            <column caption='View by Dimension' datatype='string' name='[Calculation_1234549297608560652]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[State Parameter] = &quot;Region&quot; THEN [Region]&#13;&#10;ELSEIF [Parameters].[State Parameter] = &quot;Category&quot; THEN [Category]&#13;&#10;ELSEIF [Parameters].[State Parameter] = &quot;Sub-Category&quot; THEN [Sub-Category]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1234549297608560652]' derivation='None' name='[none:Calculation_1234549297608560652:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Parameters].[State Parameter]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.060wmiv1b64sij1d3qtcu019woe5].[none:Calculation_1234549297608560652:nk]</rows>
        <cols>[federated.060wmiv1b64sij1d3qtcu019woe5].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{0A472BEA-49CE-40BD-BCF4-A19FEBB7B2A2}' />
    </worksheet>
    <worksheet name='Chart segment'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff'>Sales by Segment</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='sample_-_superstore (1)' name='federated.060wmiv1b64sij1d3qtcu019woe5' />
          </datasources>
          <datasource-dependencies datasource='federated.060wmiv1b64sij1d3qtcu019woe5'>
            <column caption='0' datatype='integer' name='[Calculation_143270813288919053]' role='measure' type='quantitative' user:unnamed='Chart segment'>
              <calculation class='tableau' formula='0' />
            </column>
            <column caption='0' datatype='integer' name='[Calculation_143270813288939535]' role='measure' type='quantitative' user:unnamed='Chart segment'>
              <calculation class='tableau' formula='0' />
            </column>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_143270813288919053]' derivation='Sum' name='[sum:Calculation_143270813288919053:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_143270813288939535]' derivation='Sum' name='[sum:Calculation_143270813288939535:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.060wmiv1b64sij1d3qtcu019woe5].[sum:Calculation_143270813288939535:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.060wmiv1b64sij1d3qtcu019woe5].[sum:Calculation_143270813288919053:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.060wmiv1b64sij1d3qtcu019woe5].[sum:Calculation_143270813288939535:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.060wmiv1b64sij1d3qtcu019woe5].[sum:Calculation_143270813288919053:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.060wmiv1b64sij1d3qtcu019woe5].[none:Segment:nk]' />
              <wedge-size column='[federated.060wmiv1b64sij1d3qtcu019woe5].[sum:Sales:qk]' />
              <size column='[federated.060wmiv1b64sij1d3qtcu019woe5].[sum:Sales:qk]' />
              <text column='[federated.060wmiv1b64sij1d3qtcu019woe5].[pcto:sum:Sales:qk]' />
              <text column='[federated.060wmiv1b64sij1d3qtcu019woe5].[none:Segment:nk]' />
              <lod column='[federated.060wmiv1b64sij1d3qtcu019woe5].[sum:Sales:ok]' />
              <color column='[federated.060wmiv1b64sij1d3qtcu019woe5].[:Measure Names]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.060wmiv1b64sij1d3qtcu019woe5].[none:Segment:nk]</run>
                <run>&gt;&#10;&lt;</run>
                <run>[federated.060wmiv1b64sij1d3qtcu019woe5].[pcto:sum:Sales:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.7691160440444946' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.060wmiv1b64sij1d3qtcu019woe5].[sum:Calculation_143270813288939535:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.060wmiv1b64sij1d3qtcu019woe5].[sum:Sales:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>Sales&#10;&lt;</run>
                <run>[federated.060wmiv1b64sij1d3qtcu019woe5].[sum:Sales:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.1314364671707153' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#ffffff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.060wmiv1b64sij1d3qtcu019woe5].[sum:Calculation_143270813288919053:qk] + [federated.060wmiv1b64sij1d3qtcu019woe5].[sum:Calculation_143270813288939535:qk])</rows>
        <cols />
      </table>
      <simple-id uuid='{DBFB667B-6213-421F-A48A-E2F8ED712CC4}' />
    </worksheet>
    <worksheet name='Chart states'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff'>Sales by States</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='sample_-_superstore (1)' name='federated.060wmiv1b64sij1d3qtcu019woe5' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.060wmiv1b64sij1d3qtcu019woe5'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.060wmiv1b64sij1d3qtcu019woe5].[Longitude (generated)]' field-type='quantitative' max='-7203353.5228259303' min='-14343168.602859665' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.060wmiv1b64sij1d3qtcu019woe5].[Latitude (generated)]' field-type='quantitative' max='9089790.3549333792' min='259363.56055958802' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.060wmiv1b64sij1d3qtcu019woe5].[sum:Sales:qk]' palette='blue_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.060wmiv1b64sij1d3qtcu019woe5].[sum:Sales:qk]' />
              <text column='[federated.060wmiv1b64sij1d3qtcu019woe5].[none:State:nk]' />
              <lod column='[federated.060wmiv1b64sij1d3qtcu019woe5].[none:State:nk]' />
              <geometry column='[federated.060wmiv1b64sij1d3qtcu019woe5].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.060wmiv1b64sij1d3qtcu019woe5].[Latitude (generated)]</rows>
        <cols>[federated.060wmiv1b64sij1d3qtcu019woe5].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{1B0F7DF2-36EF-470E-9842-D63E981BB609}' />
    </worksheet>
    <worksheet name='KPI Metric'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='sample_-_superstore (1)' name='federated.060wmiv1b64sij1d3qtcu019woe5' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Metric' datatype='string' name='[Category Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.060wmiv1b64sij1d3qtcu019woe5'>
            <column caption='Metric Value' datatype='real' name='[Calculation_143270813220548608]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// Metric Value (numeric)&#13;&#10;CASE [Parameters].[Category Parameter]&#13;&#10;WHEN &quot;Sales&quot; THEN SUM([Sales])&#13;&#10;WHEN &quot;Profit&quot; THEN SUM([Profit])&#13;&#10;WHEN &quot;# Orders&quot; THEN COUNTD([Order ID])&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_143270813220548608]' derivation='User' name='[usr:Calculation_143270813220548608:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_143270813220548608:qk]' value='c&quot;₹ &quot;#,##0,,.00M;&quot;₹ &quot;-#,##0,,.00M' />
            <format attr='font-size' field='[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_143270813220548608:qk]' value='16' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' scope='cols' value='0' />
            <format attr='border-style' scope='cols' value='none' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='subtotal' scope='cols' value='0' />
            <format attr='border-style' data-class='subtotal' scope='cols' value='none' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='border-color' value='#000000' />
            <format attr='border-width' scope='cols' value='0' />
            <format attr='border-style' scope='cols' value='none' />
            <format attr='border-style' data-class='subtotal' scope='cols' value='none' />
            <format attr='border-width' scope='rows' value='0' />
            <format attr='border-style' scope='rows' value='none' />
            <format attr='background-color' value='#aaaaff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_143270813220548608:qk]' value='true' />
            <format attr='break-on-special' field='[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_143270813220548608:qk]' value='true' />
            <format attr='show-null-value-warning' field='[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_143270813220548608:qk]' value='true' />
            <format attr='alternate-text' field='[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_143270813220548608:qk]' value='' />
            <format attr='display-alternate-text' field='[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_143270813220548608:qk]' value='false' />
            <format attr='background-color' value='#00000000' />
            <format attr='band-size' scope='rows' value='0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_143270813220548608:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontalignment='0' fontname='Benton Sans Book' fontsize='15'>Sales</run>
                <run>Æ&#10;</run>
                <run fontsize='18'><![CDATA[<[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_143270813220548608:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{4610899A-E964-4EFF-B218-717296A44048}' />
    </worksheet>
    <worksheet name='Profit Margin'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='sample_-_superstore (1)' name='federated.060wmiv1b64sij1d3qtcu019woe5' />
          </datasources>
          <datasource-dependencies datasource='federated.060wmiv1b64sij1d3qtcu019woe5'>
            <column caption='Profit Margin' datatype='real' name='[Calculation_143270813220782081]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit]) / SUM([Sales])' />
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_143270813220782081]' derivation='User' name='[usr:Calculation_143270813220782081:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_143270813220782081:qk]' value='p0.00%' />
            <format attr='color' data-class='subtotal' scope='rows' value='#000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#aaaaff' />
            <format attr='background-color' data-class='subtotal' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_143270813220782081:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='15'>Profit Margin</run>
                <run>Æ&#10;</run>
                <run fontsize='16'><![CDATA[<[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_143270813220782081:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{6B26BA8E-2365-4E8D-98D3-79AE0985F510}' />
    </worksheet>
    <worksheet name='Return rate'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='sample_-_superstore (1)' name='federated.060wmiv1b64sij1d3qtcu019woe5' />
          </datasources>
          <datasource-dependencies datasource='federated.060wmiv1b64sij1d3qtcu019woe5'>
            <column caption='Return rate ' datatype='real' name='[Calculation_143270813230706693]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_143270813232197638]) / SUM([Quantity])' />
            </column>
            <column caption='Returned Quantity' datatype='integer' name='[Calculation_143270813232197638]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Returned] = &quot;Yes&quot; THEN [Quantity] ELSE 0 END' />
            </column>
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_143270813230706693]' derivation='User' name='[usr:Calculation_143270813230706693:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_143270813230706693:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#aaaaff' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_143270813230706693:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='15'>Return Rate</run>
                <run>Æ&#10;</run>
                <run fontsize='16'><![CDATA[<[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_143270813230706693:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{8227B76E-527A-4C23-8D81-8DD8486F5EFC}' />
    </worksheet>
    <worksheet name='Sales by Sub-category'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='sample_-_superstore (1)' name='federated.060wmiv1b64sij1d3qtcu019woe5' />
          </datasources>
          <datasource-dependencies datasource='federated.060wmiv1b64sij1d3qtcu019woe5'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.060wmiv1b64sij1d3qtcu019woe5].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.060wmiv1b64sij1d3qtcu019woe5].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.060wmiv1b64sij1d3qtcu019woe5].[sum:Sales:qk]' />
              <text column='[federated.060wmiv1b64sij1d3qtcu019woe5].[pcto:sum:Sales:qk:1]' />
            </encodings>
            <reference-line axis-column='[federated.060wmiv1b64sij1d3qtcu019woe5].[sum:Sales:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.060wmiv1b64sij1d3qtcu019woe5].[sum:Sales:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.060wmiv1b64sij1d3qtcu019woe5].[none:Sub-Category:nk]</rows>
        <cols>[federated.060wmiv1b64sij1d3qtcu019woe5].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{2DFDE8F9-B91B-415F-AE63-C58652A83DBA}' />
    </worksheet>
    <worksheet name='Sales by category'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='sample_-_superstore (1)' name='federated.060wmiv1b64sij1d3qtcu019woe5' />
          </datasources>
          <datasource-dependencies datasource='federated.060wmiv1b64sij1d3qtcu019woe5'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.060wmiv1b64sij1d3qtcu019woe5].[none:Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.060wmiv1b64sij1d3qtcu019woe5].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.060wmiv1b64sij1d3qtcu019woe5].[sum:Sales:qk]' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.060wmiv1b64sij1d3qtcu019woe5].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.060wmiv1b64sij1d3qtcu019woe5].[none:Category:nk]</rows>
        <cols>[federated.060wmiv1b64sij1d3qtcu019woe5].[sum:Sales:qk]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.060wmiv1b64sij1d3qtcu019woe5].[sum:Sales:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.060wmiv1b64sij1d3qtcu019woe5].[none:Category:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.060wmiv1b64sij1d3qtcu019woe5].[none:Category:nk]</field>
                  <field>[federated.060wmiv1b64sij1d3qtcu019woe5].[sum:Sales:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Office Supplies&quot;</value>
                <value>719047.03200000245</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.060wmiv1b64sij1d3qtcu019woe5].[sum:Sales:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.060wmiv1b64sij1d3qtcu019woe5].[none:Category:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.060wmiv1b64sij1d3qtcu019woe5].[none:Category:nk]</field>
                  <field>[federated.060wmiv1b64sij1d3qtcu019woe5].[sum:Sales:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Furniture&quot;</value>
                <value>741999.79530000081</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{43F506D5-BE30-4A6A-9663-752B4C54659C}' />
    </worksheet>
    <worksheet name='Top 5 Products'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='sample_-_superstore (1)' name='federated.060wmiv1b64sij1d3qtcu019woe5' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Metric' datatype='string' name='[Category Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.060wmiv1b64sij1d3qtcu019woe5'>
            <column caption='Metric Row Value' datatype='real' name='[Calculation_143270813238476807]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Category Parameter] = &quot;Sales&quot; THEN [Sales]&#13;&#10;ELSEIF [Parameters].[Category Parameter] = &quot;Profit&quot; THEN [Profit]&#13;&#10;ELSE // Orders&#13;&#10;  1   // one order per row; LOD will sum these to count orders&#13;&#10;END' />
            </column>
            <column caption='Product Metric All' datatype='real' name='[Calculation_143270813238689800]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Product Name] : SUM([Calculation_143270813238476807]) }' />
            </column>
            <column caption='ProductRankAll' datatype='integer' name='[Calculation_143270813239169033]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_DENSE( SUM([Calculation_143270813238689800]), &apos;desc&apos; )'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_143270813238689800]' derivation='Sum' name='[sum:Calculation_143270813238689800:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_143270813239169033]' derivation='User' name='[usr:Calculation_143270813239169033:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_143270813239169033:qk:1]' included-values='in-range'>
            <max>5</max>
          </filter>
          <slices>
            <column>[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_143270813239169033:qk:1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='303' />
            <format attr='height' field='[federated.060wmiv1b64sij1d3qtcu019woe5].[none:Product Name:nk]' value='30' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.060wmiv1b64sij1d3qtcu019woe5].[none:Product Name:nk]' value='388' />
            <format attr='background-color' field='[federated.060wmiv1b64sij1d3qtcu019woe5].[none:Product Name:nk]' value='#fbf7fb' />
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='background-color' scope='rows' value='#00000000' />
            <format attr='background-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='background-color' value='#00ffff' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='background-color' scope='cols' value='#00000000' />
            <format attr='color' scope='rows' value='#000000' />
            <format attr='background-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='background-color' data-class='total' scope='cols' value='#00000000' />
            <format attr='background-color' data-class='subtotal' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.060wmiv1b64sij1d3qtcu019woe5].[sum:Calculation_143270813238689800:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.060wmiv1b64sij1d3qtcu019woe5].[none:Product Name:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{F55E6738-6051-40B7-8572-A4D152596821}' />
    </worksheet>
    <worksheet name='Trend Line'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff'>Sales Trend</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='sample_-_superstore (1)' name='federated.060wmiv1b64sij1d3qtcu019woe5' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Metric' datatype='string' name='[Category Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
              <calculation class='tableau' formula='&quot;Sales&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.060wmiv1b64sij1d3qtcu019woe5'>
            <column caption='Metric Value' datatype='real' name='[Calculation_143270813220548608]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='// Metric Value (numeric)&#13;&#10;CASE [Parameters].[Category Parameter]&#13;&#10;WHEN &quot;Sales&quot; THEN SUM([Sales])&#13;&#10;WHEN &quot;Profit&quot; THEN SUM([Profit])&#13;&#10;WHEN &quot;# Orders&quot; THEN COUNTD([Order ID])&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_143270813220548608]' derivation='User' name='[usr:Calculation_143270813220548608:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.060wmiv1b64sij1d3qtcu019woe5].[yr:Order Date:ok]'>
            <groupfilter function='level-members' level='[yr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.060wmiv1b64sij1d3qtcu019woe5].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_143270813220548608:qk]' value='80' />
            <encoding attr='space' class='1' field='[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_143270813220548608:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='1' field='[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_143270813220548608:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.060wmiv1b64sij1d3qtcu019woe5].[tmn:Order Date:qk]' value='*yyyy' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_143270813220548608:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.7031491994857788' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_143270813220548608:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_143270813220548608:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.7031491994857788' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_143270813220548608:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_143270813220548608:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.7031491994857788' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_143270813220548608:qk] + [federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_143270813220548608:qk])</rows>
        <cols>[federated.060wmiv1b64sij1d3qtcu019woe5].[tmn:Order Date:qk]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor y-index='1'>
                  <x-fields y-index='1'>
                    <field>[federated.060wmiv1b64sij1d3qtcu019woe5].[tmn:Order Date:qk]</field>
                  </x-fields>
                  <y-fields y-index='1'>
                    <field>[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_143270813220548608:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.060wmiv1b64sij1d3qtcu019woe5].[tmn:Order Date:qk]</field>
                  <field>[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_143270813220548608:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>#2014-02-01 00:00:00#</value>
                <value>4519.8920000000007</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor y-index='1'>
                  <x-fields y-index='1'>
                    <field>[federated.060wmiv1b64sij1d3qtcu019woe5].[tmn:Order Date:qk]</field>
                  </x-fields>
                  <y-fields y-index='1'>
                    <field>[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_143270813220548608:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.060wmiv1b64sij1d3qtcu019woe5].[tmn:Order Date:qk]</field>
                  <field>[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_143270813220548608:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>#2017-11-01 00:00:00#</value>
                <value>118447.82500000006</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{82749625-F431-497A-8FA9-E8B5D880AE47}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='0'>ANALYTICS REPORT </run>
            <run bold='true' fontalignment='0' fontsize='11'>for Superstore, USA</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#ddebf0' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='text-align' value='center' />
          <format attr='color' value='#000000' />
        </style-rule>
      </style>
      <size maxheight='860' maxwidth='1750' minheight='860' minwidth='1220' sizing-mode='range' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='sample_-_superstore (1)' name='federated.060wmiv1b64sij1d3qtcu019woe5' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Metric' datatype='string' name='[Category Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Sales&quot;'>
          <calculation class='tableau' formula='&quot;Sales&quot;' />
          <members>
            <member value='&quot;Sales&quot;' />
            <member value='&quot;Profit&quot;' />
            <member value='&quot;Orders&quot;' />
          </members>
        </column>
        <column caption='Region ' datatype='string' name='[Region Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
          <calculation class='tableau' formula='&quot;All&quot;' />
          <members>
            <member value='&quot;All&quot;' />
            <member value='&quot;Central&quot;' />
            <member value='&quot;East&quot;' />
            <member value='&quot;South&quot;' />
            <member value='&quot;West&quot;' />
          </members>
        </column>
        <column caption='View by' datatype='string' name='[State Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Region&quot;'>
          <calculation class='tableau' formula='&quot;Region&quot;' />
          <members>
            <member value='&quot;Region&quot;' />
            <member value='&quot;Category&quot;' />
            <member value='&quot;Sub-Category&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.060wmiv1b64sij1d3qtcu019woe5'>
        <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
        <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='22' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98140' id='31' param='vert' type-v2='layout-flow' w='98976' x='512' y='930'>
            <zone h='5697' id='32' type-v2='title' w='98976' x='512' y='930'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92443' id='29' type-v2='layout-basic' w='98976' x='512' y='6627'>
              <zone h='46222' id='27' param='vert' type-v2='layout-flow' w='98976' x='512' y='52848'>
                <zone h='46222' id='25' param='vert' type-v2='layout-flow' w='98976' x='512' y='52848'>
                  <zone h='46222' id='23' type-v2='layout-basic' w='98976' x='512' y='52848' />
                </zone>
              </zone>
              <zone h='46221' id='28' param='horz' type-v2='layout-flow' w='98976' x='512' y='6627' />
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='69535' id='4' param='vert' type-v2='layout-flow' w='9463' x='1662' y='29070'>
          <zone fixed-size='143' h='17558' id='14' is-fixed='true' mode='list' param='[Parameters].[Region Parameter]' type-v2='paramctrl' w='9463' x='1662' y='29070'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone fixed-size='85' h='10814' id='19' is-fixed='true' mode='slider' name='Trend Line' param='[federated.060wmiv1b64sij1d3qtcu019woe5].[yr:Order Date:ok]' type-v2='filter' w='9463' x='1662' y='46628'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone fixed-size='48' h='6511' id='33' is-fixed='true' mode='compact' param='[Parameters].[State Parameter]' type-v2='paramctrl' w='9463' x='1662' y='57442'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='6511' id='34' mode='compact' param='[Parameters].[Category Parameter]' type-v2='paramctrl' w='9463' x='1662' y='63953'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
        <zone h='12907' id='5' layout-strategy-id='distribute-evenly' param='horz' type-v2='layout-flow' w='45200' x='52320' y='7674'>
          <zone h='12907' id='10' name='KPI Metric' w='15089' x='52302' y='7674'>
            <layout-cache fixed-size-w='142' type-h='fixed' type-w='fixed' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone fixed-size='187' h='12907' id='11' is-fixed='true' name='Profit Margin' w='15090' x='67391' y='7674'>
            <layout-cache type-h='fixed' type-w='fixed' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='12907' id='12' name='Return rate' w='15025' x='82481' y='7674'>
            <layout-cache fixed-size-w='160' type-h='fixed' type-w='fixed' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
        <zone h='17209' id='6' is-centered='0' is-scaled='1' param='C:/Users/Shreyas/OneDrive/Pictures/Screenshots/Screenshot 2025-09-05 114321.png' type-v2='bitmap' w='11317' x='767' y='6860' />
        <zone h='16279' id='13' name='Sales by category' w='33248' x='13427' y='5930' />
        <zone h='32907' id='16' name='Chart states' w='33312' x='46100' y='23256' />
        <zone h='32558' id='17' name='Chart segment' w='20205' x='79923' y='23488' />
        <zone h='41163' id='18' name='Trend Line' w='53708' x='46036' y='57326' />
        <zone h='27791' id='20' name='Top 5 Products' w='44757' x='512' y='71395' />
        <zone h='46628' id='21' name='Sales by Sub-category' w='34015' x='11509' y='23256' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='0'>ANALYTICS REPORT </run>
                <run bold='true' fontalignment='0' fontsize='11'>for Superstore, USA</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='2400' minheight='2400' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='38' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98140' id='37' param='vert' type-v2='layout-flow' w='98976' x='512' y='930'>
                <zone h='5697' id='32' type-v2='title' w='98976' x='512' y='930'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='140' h='16279' id='13' is-fixed='true' name='Sales by category' w='33248' x='13427' y='5930'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='148' h='17209' id='6' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/Shreyas/OneDrive/Pictures/Screenshots/Screenshot 2025-09-05 114321.png' type-v2='bitmap' w='11317' x='767' y='6860'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='103' h='12907' id='10' is-fixed='true' name='KPI Metric' w='15089' x='52302' y='7674'>
                  <layout-cache fixed-size-w='142' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='103' h='12907' id='11' is-fixed='true' name='Profit Margin' w='15090' x='67391' y='7674'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='103' h='12907' id='12' is-fixed='true' name='Return rate' w='15025' x='82481' y='7674'>
                  <layout-cache fixed-size-w='160' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46628' id='21' is-fixed='true' name='Sales by Sub-category' w='34015' x='11509' y='23256'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='32907' id='16' is-fixed='true' name='Chart states' w='33312' x='46100' y='23256'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='32558' id='17' is-fixed='true' name='Chart segment' w='20205' x='79923' y='23488'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='143' h='17558' id='14' mode='list' param='[Parameters].[Region Parameter]' type-v2='paramctrl' w='9463' x='1662' y='29070'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='85' h='10814' id='19' mode='slider' name='Trend Line' param='[federated.060wmiv1b64sij1d3qtcu019woe5].[yr:Order Date:ok]' type-v2='filter' w='9463' x='1662' y='46628'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41163' id='18' is-fixed='true' name='Trend Line' w='53708' x='46036' y='57326'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='48' h='6511' id='33' mode='compact' param='[Parameters].[State Parameter]' type-v2='paramctrl' w='9463' x='1662' y='57442'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6511' id='34' mode='compact' param='[Parameters].[Category Parameter]' type-v2='paramctrl' w='9463' x='1662' y='63953'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='239' h='27791' id='20' is-fixed='true' name='Top 5 Products' w='44757' x='512' y='71395'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{EE8AF3A6-BE82-47A5-86FC-693EFCA4E8A3}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='63'>
    <window class='worksheet' name='Assignment 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.060wmiv1b64sij1d3qtcu019woe5].[:Measure Names]</field>
            <field>[federated.060wmiv1b64sij1d3qtcu019woe5].[none:Category:nk]</field>
            <field>[federated.060wmiv1b64sij1d3qtcu019woe5].[none:Region:nk]</field>
            <field>[federated.060wmiv1b64sij1d3qtcu019woe5].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5781029D-9F0A-4573-9561-3F881BD110DD}' />
    </window>
    <window class='worksheet' name='Assignment 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fm8tfy1c260ms12skacg1ywto3m].[none:cast:nk]</field>
            <field>[federated.1fm8tfy1c260ms12skacg1ywto3m].[none:listed_in:nk]</field>
            <field>[federated.1fm8tfy1c260ms12skacg1ywto3m].[none:title:nk]</field>
            <field>[federated.1fm8tfy1c260ms12skacg1ywto3m].[none:type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D56882A5-3C5B-4F90-A43C-839724129E9C}' />
    </window>
    <window class='worksheet' name='Assignment 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.060wmiv1b64sij1d3qtcu019woe5].[none:Calculation_1234549297565155330:ok]</field>
            <field>[federated.060wmiv1b64sij1d3qtcu019woe5].[none:Customer ID:nk]</field>
            <field>[federated.060wmiv1b64sij1d3qtcu019woe5].[none:Orders per Customer (bin):ok]</field>
            <field>[federated.060wmiv1b64sij1d3qtcu019woe5].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9D834B6A-C636-40ED-8B9E-BE651E40AFB2}' />
    </window>
    <window class='worksheet' name='Assignment 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.060wmiv1b64sij1d3qtcu019woe5].[io:Top 50 Customers by Sales.:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.060wmiv1b64sij1d3qtcu019woe5].[sum:Sales:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.060wmiv1b64sij1d3qtcu019woe5].[io:Top 50 Customers by Sales.:nk]</field>
            <field>[federated.060wmiv1b64sij1d3qtcu019woe5].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ACDBFD12-1E1F-40F8-91D8-A5461DAEEE24}' />
    </window>
    <window class='worksheet' name='Assignment 5'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card pane-specification-id='0' param='[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_1234549297578778634:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.060wmiv1b64sij1d3qtcu019woe5].[none:Calculation_1234549297579102219:nk]</field>
            <field>[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_1234549297579102219:nk]</field>
            <field>[federated.060wmiv1b64sij1d3qtcu019woe5].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{91E02862-4A34-4817-9B00-E0905B4D217C}' />
    </window>
    <window class='worksheet' name='Assignment 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[State Parameter]' type='parameter' />
            <card pane-specification-id='0' param='[Parameters].[State Parameter]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[State Parameter]</field>
            <field>[federated.060wmiv1b64sij1d3qtcu019woe5].[none:Calculation_1234549297608560652:nk]</field>
            <field>[federated.060wmiv1b64sij1d3qtcu019woe5].[none:Category:nk]</field>
            <field>[federated.060wmiv1b64sij1d3qtcu019woe5].[none:Region:nk]</field>
            <field>[federated.060wmiv1b64sij1d3qtcu019woe5].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2E540B0F-75E5-4B8D-BC9D-5CE14B8B4C92}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Chart segment'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Chart states'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='KPI Metric' />
        <viewpoint name='Profit Margin' />
        <viewpoint name='Return rate' />
        <viewpoint name='Sales by Sub-category'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales by category' />
        <viewpoint name='Top 5 Products' />
        <viewpoint name='Trend Line'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{56D64888-01FB-42EF-A0B9-1C7210330EDC}' />
    </window>
    <window class='worksheet' name='Sales by Sub-category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.060wmiv1b64sij1d3qtcu019woe5].[sum:Sales:qk]' type='color' />
            <card mode='list' param='[Parameters].[Category Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.060wmiv1b64sij1d3qtcu019woe5].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5D3790CC-0B09-494A-85A8-00C4D8AEB66F}' />
    </window>
    <window class='worksheet' name='KPI Metric'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Category Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Category Parameter]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{450DE8FA-50E0-4623-9EC1-9B854B18B077}' />
    </window>
    <window class='worksheet' name='Profit Margin'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Category Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{70EEEF72-3B07-43E0-8DE2-3F228800880E}' />
    </window>
    <window class='worksheet' name='Return rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.060wmiv1b64sij1d3qtcu019woe5].[none:Returned:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{543F1283-B52B-447D-97AA-50206C645C94}' />
    </window>
    <window class='worksheet' name='Chart states'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.060wmiv1b64sij1d3qtcu019woe5].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Category Parameter]</field>
            <field>[federated.060wmiv1b64sij1d3qtcu019woe5].[none:State:nk]</field>
            <field>[federated.060wmiv1b64sij1d3qtcu019woe5].[usr:Calculation_143270813220548608:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CDB040B3-E803-428F-AE69-A1589382CB34}' />
    </window>
    <window class='worksheet' name='Top 5 Products'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.060wmiv1b64sij1d3qtcu019woe5].[none:Product Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F3E5CA49-29FB-4A39-86B1-9A9C58EBE3CA}' />
    </window>
    <window class='worksheet' name='Chart segment'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='1' param='[federated.060wmiv1b64sij1d3qtcu019woe5].[sum:Sales:qk]' type='size' />
            <card pane-specification-id='1' param='[federated.060wmiv1b64sij1d3qtcu019woe5].[none:Segment:nk]&#10;[federated.060wmiv1b64sij1d3qtcu019woe5].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.060wmiv1b64sij1d3qtcu019woe5].[:Measure Names]</field>
            <field>[federated.060wmiv1b64sij1d3qtcu019woe5].[none:Segment:nk]</field>
            <field>[federated.060wmiv1b64sij1d3qtcu019woe5].[sum:Sales:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FC120A3B-9B88-41B0-9243-C29E739212A4}' />
    </window>
    <window class='worksheet' name='Trend Line'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.060wmiv1b64sij1d3qtcu019woe5].[yr:Order Date:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.060wmiv1b64sij1d3qtcu019woe5].[:Measure Names]</field>
            <field>[federated.060wmiv1b64sij1d3qtcu019woe5].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C80560E1-76B7-4898-A1CA-FCB9D2065B12}' />
    </window>
    <window class='worksheet' name='Sales by category'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card mode='list' param='[Parameters].[Region Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.060wmiv1b64sij1d3qtcu019woe5].[none:Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C7DD6DEC-EB62-4354-9A04-A980B5123A16}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Assignment 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Assignment 2' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Assignment 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Assignment 4' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='67' name='Assignment 5' width='144'>
      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
    </thumbnail>
    <thumbnail height='167' name='Assignment 6' width='192'>
      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
      0Q19C7wkAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Chart segment' width='192'>
      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
      NAlAKO3/AWIYqTrLnaahAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Chart states' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='75' name='KPI Metric' width='144'>
      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
      QDJB8f9MYR7I6pmkYwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='76' name='Profit Margin' width='184'>
      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
    </thumbnail>
    <thumbnail height='76' name='Return rate' width='164'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sales by Sub-category' width='192'>
      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
      xhCAwZ7m/wc2dHHyTZ5DGQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='84' name='Sales by category' width='192'>
      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
    </thumbnail>
    <thumbnail height='174' name='Top 5 Products' width='192'>
      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
      Y2bzE4MJHm0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Trend Line' width='192'>
      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
      RK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
